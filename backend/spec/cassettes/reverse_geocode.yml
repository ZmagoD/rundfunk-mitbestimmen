---
http_interactions:
- request:
    method: get
    uri: http://maps.googleapis.com/maps/api/geocode/json?language=en&latlng=49.0047,8.3858&sensor=false
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Sun, 24 Sep 2017 15:22:51 GMT
      Expires:
      - Mon, 25 Sep 2017 15:22:51 GMT
      Cache-Control:
      - public, max-age=86400
      Access-Control-Allow-Origin:
      - "*"
      Server:
      - mafe
      Content-Length:
      - '1163'
      X-Xss-Protection:
      - 1; mode=block
      X-Frame-Options:
      - SAMEORIGIN
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Sun, 24 Sep 2017 15:22:51 GMT
recorded_with: VCR 3.0.3
